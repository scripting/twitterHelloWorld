<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Mon, 06 Jun 2022 17:26:12 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: twitterHelloWorld</title>
		<dateCreated>Mon, 06 Jun 2022 17:11:36 GMT</dateCreated>
		<dateModified>Mon, 06 Jun 2022 17:26:12 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 4, 6, 23, 35</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>258</windowTop>
		<windowLeft>892</windowLeft>
		<windowBottom>758</windowBottom>
		<windowRight>1854</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/twitterhelloworld/" created="Mon, 06 Jun 2022 15:05:20 GMT">
			<outline text="readme.md" created="Mon, 06 Jun 2022 15:05:20 GMT">
				<outline text="# Twitter Hello World" created="Mon, 06 Jun 2022 15:07:47 GMT">
					<outline text="Suppose I want to write an app that runs in the browser that just says Hello World from my Twitter account. " created="Mon, 06 Jun 2022 15:06:11 GMT"/>
					<outline text="This is the canonical example, to illustrate the overhead of a development platform. " created="Mon, 06 Jun 2022 15:06:35 GMT"/>
					<outline text="This shows where're starting, and how big an improvement is possible." created="Mon, 06 Jun 2022 15:06:54 GMT"/>
					<outline text="But first, the current state of the art in Twitter hello worlds circa the summer of 2022." created="Mon, 06 Jun 2022 15:07:23 GMT"/>
					</outline>
				<outline text="#### You can see what the app does by.." created="Mon, 06 Jun 2022 17:23:00 GMT">
					<outline text="Go to &lt;a href=&quot;http://scripting.com/code/twitterhelloworld/index.html&quot;&gt;this page&lt;/a&gt; and follow the instructions." created="Mon, 06 Jun 2022 17:23:11 GMT"/>
					</outline>
				<outline text="#### How the pieces fit together" created="Mon, 06 Jun 2022 17:15:49 GMT">
					<outline text="First, this is not a tutorial for setting up a Twitter app. I'm just listing the steps here so you can see how much work is involved in setting up the Hello World app. " created="Mon, 06 Jun 2022 17:16:53 GMT"/>
					<outline text="1. You'll need to set up an app on apps.twitter.com. " created="Mon, 06 Jun 2022 17:16:12 GMT"/>
					<outline text="1. Then set the callback URI to http://yourdomain/callbackFromTwitter." created="Mon, 06 Jun 2022 17:16:30 GMT"/>
					<outline text="1. Get the API Key and secret, and edit the config.json file to include these values. " created="Mon, 06 Jun 2022 17:18:49 GMT"/>
					<outline text="2. There's a Node.js app in this folder. Run npm install to get all the packages it needs. " created="Mon, 06 Jun 2022 17:15:57 GMT"/>
					<outline text="3. Edit the config struct in the app so it's pointing to the correct server and port. " created="Mon, 06 Jun 2022 17:20:48 GMT"/>
					<outline text="3. Run the server app." created="Mon, 06 Jun 2022 17:19:27 GMT"/>
					<outline text="4. There's also a browser-based app in the folder, in three files, styles.css, code.js and index.html. " created="Mon, 06 Jun 2022 17:19:31 GMT"/>
					<outline text="5. Edit code.js file so &lt;i&gt;urlTwitterServer&lt;/i&gt; points to the Node app. " created="Mon, 06 Jun 2022 17:20:15 GMT"/>
					<outline text="6. Then run the client app. Log in to the app on Twitter. Click the button and enter a string for the Hello World message. If all goes well your message will appear on Twitter. " created="Mon, 06 Jun 2022 17:21:54 GMT"/>
					<outline text="7. When you're done be sure to click the link to log out." created="Mon, 06 Jun 2022 17:22:46 GMT"/>
					</outline>
				</outline>
			<outline text="package.json" created="Mon, 06 Jun 2022 15:08:27 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;twitterhelloworld&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;twitterhelloworld.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davetwitter&quot;: &quot;*&quot;" created="Mon, 08 Mar 2021 15:15:44 GMT"/>
						<outline text="}, "/>
						</outline>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="twitterhelloworld.js" created="Mon, 06 Jun 2022 15:08:02 GMT">
				<outline text="const fs = require (&quot;fs&quot;); "/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davetwitter = require (&quot;davetwitter&quot;);"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="httpPort: 1491," created="Mon, 06 Jun 2022 15:15:07 GMT"/>
					<outline text="myDomain: &quot;localhost:1491&quot;," created="Mon, 06 Jun 2022 16:04:36 GMT"/>
					<outline text="flLogToConsole: true," created="Mon, 06 Jun 2022 15:15:51 GMT"/>
					<outline text="flAllowAccessFromAnywhere: true," created="Mon, 06 Jun 2022 15:16:06 GMT"/>
					<outline text="flPostEnabled: true," created="Mon, 06 Jun 2022 15:16:18 GMT"/>
					<outline text="twitterConsumerKey: undefined, //provided in config file"/>
					<outline text="twitterConsumerSecret: undefined"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="function readConfig (f, theConfig, callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="1/21/21; 12:35:00 PM by DW">
							<outline text="New param, flReportError."/>
							</outline>
						</outline>
					<outline text="fs.readFile (f, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;readConfig: err.message == &quot; + err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="try {">
								<outline text="var jstruct = JSON.parse (jsontext);"/>
								<outline text="for (var x in jstruct) {">
									<outline text="theConfig [x] = jstruct [x];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="catch (err) {">
								<outline text="console.log (&quot;readConfig: err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="callback ();"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function handleHttpRequest (theRequest) {">
					<outline text="var params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.lowermethod) {">
						<outline text="case &quot;post&quot;:">
							<outline text="break;"/>
							</outline>
						<outline text="case &quot;get&quot;:">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/sendtweet&quot;: " created="Thu, 26 Jun 2014 11:33:59 GMT" pgfnum="42464">
									<outline text="davetwitter.sendTweet (token, secret, params.message, undefined, httpReturn);"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="break;"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (false);"/>
					<outline text="}"/>
					</outline>
				<outline text="readConfig (&quot;config.json&quot;, config, function (err) {" created="Wed, 17 Mar 2021 16:34:49 GMT">
					<outline text="config.httpRequestCallback = handleHttpRequest;" created="Mon, 06 Jun 2022 15:16:31 GMT"/>
					<outline text="davetwitter.start (config);"/>
					<outline text="});" created="Wed, 17 Mar 2021 16:35:03 GMT"/>
					</outline>
				<outline text="" created="Wed, 17 Mar 2021 16:34:49 GMT"/>
				<outline text=""/>
				</outline>
			<outline text="config.json" isComment="true" created="Mon, 06 Jun 2022 15:25:27 GMT">
				<outline text="{" created="Mon, 06 Jun 2022 15:25:29 GMT">
					<outline text="&quot;twitterConsumerKey&quot;: &quot;xxx&quot;," created="Mon, 06 Jun 2022 15:25:43 GMT"/>
					<outline text="&quot;twitterConsumerSecret&quot;: &quot;xxx&quot;" created="Mon, 06 Jun 2022 15:25:49 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 15:25:42 GMT"/>
					</outline>
				</outline>
			<outline text="" created="Mon, 06 Jun 2022 15:20:21 GMT"/>
			<outline text="styles.css" created="Mon, 06 Jun 2022 15:20:26 GMT">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 60%;"/>
					<outline text="margin-top: 60px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divButtonContainer {" created="Mon, 06 Jun 2022 15:45:44 GMT">
					<outline text="margin-left: 50px;" created="Mon, 06 Jun 2022 15:45:48 GMT"/>
					<outline text="margin-bottom: 15px;" created="Mon, 06 Jun 2022 15:46:35 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 15:45:55 GMT"/>
					</outline>
				<outline text=".divSignedOn, divNotSignedOn {" created="Mon, 06 Jun 2022 15:46:18 GMT">
					<outline text="display: none;" created="Mon, 06 Jun 2022 15:51:13 GMT"/>
					<outline text="margin-top: 15px;" created="Mon, 06 Jun 2022 15:46:35 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 15:46:27 GMT"/>
					</outline>
				</outline>
			<outline text="code.js" created="Mon, 06 Jun 2022 15:20:22 GMT">
				<outline text="const urlTwitterServer = &quot;http://localhost:1491/&quot;;" created="Wed, 17 Mar 2021 20:35:09 GMT"/>
				<outline text="" created="Mon, 06 Jun 2022 15:49:35 GMT"/>
				<outline text="function servercall (verb, params, flAuthenticated, callback, method, postbody) {">
					<outline text="if (flAuthenticated === undefined) {">
						<outline text="flAuthenticated = true;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (method === undefined) {">
						<outline text="method = &quot;GET&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) {">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="var apiUrl = urlTwitterServer + verb;"/>
					<outline text="var paramString = twBuildParamList (params);"/>
					<outline text="if (paramString.length &gt; 0) {">
						<outline text="apiUrl += &quot;?&quot; + paramString;"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="console.log (&quot;serverCall: verb == &quot; + verb + &quot;, apiUrl == &quot; + apiUrl);"/>
					<outline text=""/>
					<outline text="$.ajax ({">
						<outline text="type: method,"/>
						<outline text="url: apiUrl,"/>
						<outline text="data: postbody, "/>
						<outline text="success: function (data) {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (undefined, data);"/>
								<outline text="}"/>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status, something, otherthing) { ">
							<outline text="console.log (&quot;serverCall: error == &quot; + JSON.stringify (status, undefined, 4));" created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848"/>
							<outline text="if (callback !== undefined) {">
								<outline text="var err = {">
									<outline text="code: status.status,"/>
									<outline text="message: JSON.parse (status.responseText).message"/>
									<outline text="};"/>
									</outline>
								<outline text="if (callback !== undefined) {">
									<outline text="callback (err);"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function serverpost (path, params, flAuthenticated, filedata, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
							<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
							</outline>
						<outline text="2/25/21; 1:01:58 PM by DW">
							<outline text="A special form of servercall for posts."/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" created="Mon, 02 Aug 2021 18:36:54 GMT">
						<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
						<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlTwitterServer + path + &quot;?&quot; + twBuildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="try {" created="Mon, 06 Jun 2022 17:03:10 GMT">
						<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
							<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
								<outline text="console.log (&quot;serverpost: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
								</outline>
							<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
								<outline text="var err = {">
									<outline text="code: status.status,"/>
									<outline text="message: JSON.parse (status.responseText).message"/>
									<outline text="};"/>
									</outline>
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (err);"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
								</outline>
							<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
							</outline>
						<outline text="}" created="Mon, 06 Jun 2022 17:03:12 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Mon, 06 Jun 2022 17:03:18 GMT">
						<outline text="console.log (&quot;yo&quot;);" created="Mon, 06 Jun 2022 17:03:29 GMT"/>
						<outline text="}" created="Mon, 06 Jun 2022 17:03:22 GMT"/>
						</outline>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {" isComment="true">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); "/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Mon, 06 Jun 2022 16:00:18 GMT"/>
				<outline text="function signOnButton () {" created="Mon, 06 Jun 2022 16:00:18 GMT">
					<outline text="$(&quot;.btn&quot;).blur ();" created="Mon, 06 Jun 2022 16:11:35 GMT"/>
					<outline text="twConnectToTwitter ();" created="Mon, 06 Jun 2022 16:00:26 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 16:00:27 GMT"/>
					</outline>
				<outline text="function signOffButton () {" created="Mon, 06 Jun 2022 16:00:18 GMT">
					<outline text="twDisconnectFromTwitter ();" created="Mon, 06 Jun 2022 16:00:26 GMT"/>
					<outline text="location.reload ();" created="Mon, 06 Jun 2022 16:31:51 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 16:00:27 GMT"/>
					</outline>
				<outline text="function sendHelloWorldTweet () {" created="Mon, 06 Jun 2022 16:11:58 GMT">
					<outline text="$(&quot;.btn&quot;).blur ();" created="Mon, 06 Jun 2022 16:11:35 GMT"/>
					<outline text="var lastMessage = &quot;Hello world.&quot;;" created="Mon, 06 Jun 2022 16:49:15 GMT"/>
					<outline text="if (localStorage.lastMessage !== undefined) {" created="Mon, 06 Jun 2022 16:49:15 GMT">
						<outline text="lastMessage = localStorage.lastMessage;" created="Mon, 06 Jun 2022 16:51:55 GMT"/>
						<outline text="}" created="Mon, 06 Jun 2022 16:51:58 GMT"/>
						</outline>
					<outline text="askDialog (&quot;Enter your Hello World message:&quot;, lastMessage, &quot;Hello world.&quot;, function (helloWorldMessage, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
						<outline text="if (!flcancel) {">
							<outline text="servercall (&quot;sendtweet&quot;, {message: helloWorldMessage}, true, function (err, result) {" created="Mon, 06 Jun 2022 16:13:57 GMT">
								<outline text="if (err) {" created="Mon, 06 Jun 2022 16:19:25 GMT">
									<outline text="alertDialog (err.message);" created="Mon, 06 Jun 2022 16:19:36 GMT"/>
									<outline text="}" created="Mon, 06 Jun 2022 16:19:29 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 06 Jun 2022 16:19:31 GMT">
									<outline text="alertDialog (&quot;It worked!&quot;);" created="Mon, 06 Jun 2022 16:19:36 GMT"/>
									<outline text="console.log (jsonStringify (result));" created="Mon, 06 Jun 2022 16:19:45 GMT"/>
									<outline text="}" created="Mon, 06 Jun 2022 16:19:32 GMT"/>
									</outline>
								<outline text="});" created="Mon, 06 Jun 2022 16:14:51 GMT"/>
								</outline>
							<outline text="localStorage.lastMessage = lastMessage;" created="Mon, 06 Jun 2022 16:51:39 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 06 Jun 2022 16:12:03 GMT"/>
					</outline>
				<outline text="" created="Mon, 06 Jun 2022 16:00:18 GMT"/>
				<outline text="function startup () {" created="Mon, 06 Jun 2022 15:20:24 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Mon, 06 Jun 2022 15:21:52 GMT"/>
					<outline text="twStorageData.urlTwitterServer = urlTwitterServer;" created="Mon, 06 Jun 2022 16:02:24 GMT"/>
					<outline text="twGetOauthParams ();"/>
					<outline text="if (twIsTwitterConnected ()) {">
						<outline text="$(&quot;#idSignedOn&quot;).css (&quot;display&quot;, &quot;block&quot;);" created="Mon, 06 Jun 2022 15:34:22 GMT"/>
						<outline text="$(&quot;#idNotSignedOn&quot;).css (&quot;display&quot;, &quot;none&quot;);" created="Mon, 06 Jun 2022 15:34:22 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="else {" created="Mon, 06 Jun 2022 15:33:59 GMT">
						<outline text="$(&quot;#idNotSignedOn&quot;).css (&quot;display&quot;, &quot;block&quot;);" created="Mon, 06 Jun 2022 15:34:22 GMT"/>
						<outline text="$(&quot;#idSignedOn&quot;).css (&quot;display&quot;, &quot;none&quot;);" created="Mon, 06 Jun 2022 15:34:22 GMT"/>
						<outline text="}" created="Mon, 06 Jun 2022 15:34:02 GMT"/>
						</outline>
					<outline text="}" created="Mon, 06 Jun 2022 15:21:50 GMT"/>
					</outline>
				</outline>
			<outline text="index.html" created="Thu, 07 Apr 2022 16:25:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;Twitter Hello World&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/nodestorage/api.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;h1&gt;Twitter Hello World&lt;/h1&gt;"/>
							<outline text="&lt;div class=&quot;divNotSignedOn&quot; id=&quot;idNotSignedOn&quot;&gt;" created="Mon, 06 Jun 2022 15:21:00 GMT">
								<outline text="Click this button to sign on to your Twitter your account.&lt;br&gt;&lt;br&gt;" created="Mon, 06 Jun 2022 15:22:08 GMT"/>
								<outline text="&lt;div class=&quot;divButtonContainer&quot;&gt;" created="Mon, 06 Jun 2022 15:45:22 GMT">
									<outline text="&lt;button class=&quot;btn btn-large&quot; type=&quot;button&quot; onclick=&quot;signOnButton ();&quot;&gt;Sign on to Twitter&lt;/button&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161"/>
									<outline text="&lt;/div&gt;" created="Mon, 06 Jun 2022 15:45:34 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Mon, 06 Jun 2022 15:21:10 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divSignedOn&quot; id=&quot;idSignedOn&quot;&gt;" created="Mon, 06 Jun 2022 15:21:00 GMT">
								<outline text="Click this button to send a &quot;Hello World&quot; message from Twitter. &lt;br&gt;&lt;br&gt;" created="Mon, 06 Jun 2022 15:22:22 GMT"/>
								<outline text="&lt;div class=&quot;divButtonContainer&quot;&gt;" created="Mon, 06 Jun 2022 15:45:22 GMT">
									<outline text="&lt;button class=&quot;btn btn-large&quot; type=&quot;button&quot; onclick=&quot;sendHelloWorldTweet ();&quot;&gt;Hello World&lt;/button&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161"/>
									<outline text="&lt;/div&gt;" created="Mon, 06 Jun 2022 15:45:34 GMT"/>
									</outline>
								<outline text="When you're done, &lt;a onclick=&quot;signOffButton ()&quot;&gt;click here&lt;/a&gt; to sign off Twitter. " created="Mon, 06 Jun 2022 16:28:38 GMT"/>
								<outline text="&lt;/div&gt;" created="Mon, 06 Jun 2022 15:21:10 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Mon, 06 Jun 2022 17:11:50 GMT">
			<outline text="nodeEditorSuite.utilities.buildTwitterHelloWorld ()" created="Fri, 18 Feb 2022 16:51:42 GMT"/>
			</outline>
		</body>
	</opml>
